<?xml version="1.0"?>
<doc>
<assembly>
<name>
RIW.Modules.Services
</name>
</assembly>
<members>
<member name="T:RIW.Modules.Services.SqlDataProvider">
 -----------------------------------------------------------------------------
 <summary>
 SQL Server implementation of the abstract DataProvider class
 
 This concreted data provider class provides the implementation of the abstract methods 
 from data dataprovider.cs
 
 In most cases you will only modify the Public methods region below.
 </summary>
 -----------------------------------------------------------------------------

</member><member name="M:RIW.Modules.Services.BrandModelsController.GetBrandModels(System.Int32,System.Int32)">
	<summary>
 Gets a list of models by brand id
 </summary>
	<param name="brandId">Brand ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandModelsController.GetBrandModel(System.Int32,System.Int32)">
	<summary>
 Gets model by Model id
 </summary>
	<param name="modelId">Model ID</param>
	<param name="brandId">Brand ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandModelsController.UpdateBrandModel(System.Int32,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds or updates a model
 </summary>
	<param name="modelId">Model Id</param>
	<param name="mTitle">Model Title</param>
	<param name="brandId">Brand ID</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandModelsController.RemoveBrandModel(System.Int32,System.Int32)">
	<summary>
 Removes model
 </summary>
	<param name="modelId">Model ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.GetEstimates(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
	<summary>
 Gets a list of estimates by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="clientId">Client ID</param>
	<param name="salesRep">Sales Rep. ID</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">Page Size</param>
	<param name="orderBy">Order By</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.GetEstimate(System.Int32)">
	<summary>
 Gets an estimate by estimate id
 </summary>
	<param name="eId">Estimate ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.GetEstimateItems(System.Int32)">
	<summary>
 Gets list of estimate items by estimate id
 </summary>
	<param name="eId">Estimate ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.AddEstimate(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Adds a quick estimate
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="clientId">Client Title</param>
	<param name="estimateTitle">Estimate Title</param>
	<param name="guid">GUID</param>
	<param name="salesPerson">Sales Persom ID</param>
	<param name="viewPrice">View Price Permission</param>
	<param name="discount">Estimate Discount</param>
	<param name="totalAmount">Total Estimate Amount</param>
	<param name="createdByUser">Created By User User ID</param>
	<param name="createdOnDate">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.AddEstimateItem(RIW.Modules.Services.Models.EstimateItem)">
	<summary>
 Adds a quick estimate item
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.RemoveQItem(RIW.Modules.Services.Models.EstimateRemovedItem)">
	<summary>
 Removes a quick estimate item
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.UpdateEstimateItem(RIW.Modules.Services.Models.EstimateItem)">
	<summary>
 Updates a quick estimate item
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.UpdateEstimateClient(System.Int32,System.Int32,System.Int32,System.DateTime)">
	<summary>
 Updates estimate client id
 </summary>
	<param name="eId">Estimate ID</param>
	<param name="cid">Client ID</param>
	<param name="uId">Modified By User User ID</param>
	<param name="md">Modified Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.UpdateEstimateAmount(System.Int32,System.String,System.Int32,System.DateTime)">
	<summary>
 Updates estimate total amount
 </summary>
	<param name="eId">Estimate ID</param>
	<param name="amt">Amount</param>
	<param name="uId">Modified By User User ID</param>
	<param name="md">Modified Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.UpdateEstimatePayCond(System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Updates estimate pay form and condition
 </summary>
	<param name="eId">Estimate ID</param>
	<param name="pcType">Payment Type</param>
	<param name="pcN">Number of Payments</param>
	<param name="pcPerc">Interest</param>
	<param name="pcIn">Down Paymnent</param>
	<param name="pcInst">Payment</param>
	<param name="pcInterval">Interval (days)</param>
	<param name="totalPayments">Total Payments</param>
	<param name="totalPC">Total Pay Condition</param>
	<param name="uId">Creator ID</param>
	<param name="md">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.UpdateStatus(RIW.Modules.Services.Models.Estimate)">
	<summary>
 Updates estimate status
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.AddCashier(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Adds a quick sales
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="eId">Estimate ID</param>
	<param name="totalCash">Total Cash Received</param>
	<param name="totalCheck">Total Received in Check</param>
	<param name="totalCard">Total Received in Credit Card</param>
	<param name="totalBank">Total Bank Pay Created</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.EstimatesController.AddHistory(System.Int32,System.String,System.Int32,System.DateTime)">
	<summary>
 Adds estimate history
 </summary>
	<param name="eId">Estimate ID</param>
	<param name="hText">History Text</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.ValidateClient(System.String)">
	<summary>
 Checks for an existing email from the client's table
 </summary>
	<param name="email"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientsAll(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.String)">
	<summary>
 Gets list of clients
 </summary>
	<param name="sRep">Sales Person ID</param>
	<param name="isDeleted">Has been set as deleted</param>
	<param name="sTerm">Clients Search Term</param>
	<param name="sId">Status ID</param>
	<param name="sDate">Start ModifiedOnDate</param>
	<param name="eDate">End Modified Date Range</param>
	<param name="page">Page Number</param>
	<param name="pageSize">Page Size</param>
	<param name="orderBy">Sorting Order</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClient(System.Int32,System.Int32)">
	<summary>
 Gets client info
 </summary>
	<param name="clientId">Client ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClient(System.Int32,System.Boolean,System.String,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Adds client
 </summary>
	<param name="pType">Person Type</param>
	<param name="cName">Company Name</param>
	<param name="fName">First Name</param>
	<param name="lName">Last Name</param>
	<param name="phone">Telephone</param>
	<param name="cell">Cell</param>
	<param name="fax">Fax</param>
	<param name="zero800s">Zero 800</param>
	<param name="email">Email</param>
	<param name="website">Website</param>
	<param name="dateFound"></param>
	<param name="dateRegistered">Date Registered</param>
	<param name="ein">ein</param>
	<param name="cpf">CPF</param>
	<param name="ident">Identity</param>
	<param name="st">State Tax</param>
	<param name="im">Local Tax</param>
	<param name="comments">Comments</param>
	<param name="salesRep">Sales Rep</param>
	<param name="industries">Industry IDs</param>
	<param name="createdById">Created By User ID</param>
	<param name="createdOnDate">Created Date</param>
	<param name="city">City</param>
	<param name="clientId">Client ID</param>
	<param name="country">Country</param>
	<param name="complement">Complement</param>
	<param name="createLogin">Create Login</param>
	<param name="district">District</param>
	<param name="postalCode">Postal Code</param>
	<param name="region">Region</param>
	<param name="rTypes">Register Types</param>
	<param name="street">Street</param>
	<param name="unit">Unit</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.DeleteClient(System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Deletes a client by client id
 </summary>
	<param name="cId">Client ID</param>
	<param name="portalId">Portal ID</param>
	<param name="cUId">Client User ID</param>
	<param name="uId">Created By User</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveClient(System.Int32,System.Int32)">
	<summary>
 Removes a client by client id
 </summary>
	<param name="cId">Client ID</param>
	<param name="cUId">Client User ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientIndustries(System.Int32)">
	<summary>
 Get client inndustris by client id
 </summary>
	<param name="cId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientAddresses(System.Int32)">
	<summary>
 Gets client addresses by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientAddress(System.Int32,System.Int32)">
	<summary>
 Gets client address
 </summary>
	<param name="cAId">Client Address ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientAddress(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds or updates client address
 </summary>
	<param name="cId">Client ID</param>
	<param name="aName">Address Name</param>
	<param name="street">Street</param>
	<param name="unit">Unit</param>
	<param name="complem">Complement</param>
	<param name="dist">District</param>
	<param name="city">City</param>
	<param name="region">Region</param>
	<param name="zip">Postal Code</param>
	<param name="country">Country</param>
	<param name="phone">Telephone</param>
	<param name="cell">Cellular</param>
	<param name="fax">Fax</param>
	<param name="vieworder">View Order</param>
	<param name="uId">Created By User</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveClientAddress(System.Int32,System.Int32)">
	<summary>
 Removes a client address
 </summary>
	<param name="cAId">Client Address ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientContacts(System.Int32)">
	<summary>
 Gets client contacts by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientContact(System.Int32,System.Int32)">
	<summary>
 Gets client contact
 </summary>
	<param name="cCId">Client Contact ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientContact(RIW.Modules.Services.Models.ClientContact)">
	<summary>
 Adds or updates client contact
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveClientContact(System.Int32,System.Int32)">
	<summary>
 Removes a client contact
 </summary>
	<param name="cCId">Client Contact ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientDocs(System.Int32)">
	<summary>
 Gets client docs by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientDoc(System.Int32,System.Int32)">
	<summary>
 Gets client doc
 </summary>
	<param name="cDId">Client Doc ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.SaveClientDoc(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.DateTime,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
	<summary>
 Saves a file by client id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cId">Client ID</param>
	<param name="docName">Document Name</param>
	<param name="docDesc">Document Desc</param>
	<param name="docUrl">External Document URL</param>
	<param name="maxWidth">Image's width</param>
	<param name="maxHeight">Image's height</param>
	<param name="folderPath">Save path</param>
	<param name="uId">Created By User ID</param>
	<param name="cd">Created Date</param>
	<param name="files">Uploaded Files</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveClientDoc(System.Int32,System.Int32)">
	<summary>
 Removes a client Doc
 </summary>
	<param name="cDId">Client Doc ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientFinance(System.Int32,System.Int32,System.String,System.Int32,System.DateTime)">
	<summary>
 Updates client finance by client id
 </summary>
	<param name="cId">Client ID</param>
	<param name="cAId">Client Address ID</param>
	<param name="mIncome">Monthly Income</param>
	<param name="uId">Created By User ID</param>
	<param name="md">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientIncomeSources(System.Int32)">
	<summary>
 Gets client income sources by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientIncomeSource(System.Int32,System.Int32)">
	<summary>
 Gets client income source
 </summary>
	<param name="cISId">Client Income Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientIncomeSource(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
	<summary>
 Updates client income source by income source id
 </summary>
	<param name="cISId">Income Source ID</param>
	<param name="iSName">Income Source Title</param>
	<param name="iSEIN">Employer Identification Number</param>
	<param name="iSST">State Tax ID</param>
	<param name="iSCT">City Tax ID</param>
	<param name="iSPhone">Telephone</param>
	<param name="iSFax">Fax</param>
	<param name="iSIncome">Monthly Income</param>
	<param name="isZip">Postal Code</param>
	<param name="isStreet">Street Address</param>
	<param name="iSUnit">Unit</param>
	<param name="iSComplem">Complement</param>
	<param name="iSDist">District</param>
	<param name="iSCity">City</param>
	<param name="iSRegion">Region</param>
	<param name="iSCountry">Country</param>
	<param name="isProof">Income Proovable</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveClientIncomeSource(System.Int32,System.Int32)">
	<summary>
 Removes a client income source
 </summary>
	<param name="cISId">Client Income Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPersonalRefs(System.Int32)">
	<summary>
 Gets client personal references by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPersonalRef(System.Int32,System.Int32)">
	<summary>
 Gets client personal reference
 </summary>
	<param name="cPRId">Client Personal Ref ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientPersonalRef(System.Int32,System.String,System.String,System.String,System.Int32)">
	<summary>
 Adds or updates client personal reference
 </summary>
	<param name="cId">Client ID</param>
	<param name="cPRId">Personal Reference ID</param>
	<param name="pRName">Name</param>
	<param name="pRPhone">Phone Number</param>
	<param name="pREmail">Email</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemovePersonalReference(System.Int32,System.Int32)">
	<summary>
 Removes a client personal reference
 </summary>
	<param name="cPRId">Client Personal Reference Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientBankRefs(System.Int32)">
	<summary>
 Gets client bank references by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientBankRef(System.Int32,System.Int32)">
	<summary>
 Gets client bank reference
 </summary>
	<param name="cBRId">Client Bank Ref ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientBankRef(RIW.Modules.Services.Models.ClientBankRef)">
	<summary>
 Updates client bank reference by bank reference id
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveBankReference(System.Int32,System.Int32)">
	<summary>
 Removes a client bank reference
 </summary>
	<param name="cBRId">Client Bank Reference Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientCommRefs(System.Int32)">
	<summary>
 Gets client commerce references by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientCommRef(System.Int32,System.Int32)">
	<summary>
 Gets client commerce reference
 </summary>
	<param name="cCRId">Client Commerce Ref ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientCommRef(System.Int32,System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
	<summary>
 Adds or updates client commerce reference
 </summary>
	<param name="cCRId">Client Commerce Reference ID</param>
	<param name="cRef">Commerce Reference</param>
	<param name="cRefContact">Commerce Contact</param>
	<param name="cRefPhone">Commerce Contact Phone</param>
	<param name="cRefLastActivity">Commerce Last Activity</param>
	<param name="cRefCredit">Commerce Credit Limit</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemoveCommRef(System.Int32,System.Int32)">
	<summary>
 Removes a client commerce reference
 </summary>
	<param name="cCRId">Client Commerce Reference Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPartners(System.Int32)">
	<summary>
 Gets client partners by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPartner(System.Int32,System.Int32)">
	<summary>
 Gets client partner
 </summary>
	<param name="cPId">Client Partner ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientPartner(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
	<summary>
 Adds or updates client partner by partner id
 </summary>
	<param name="cId">Client ID</param>
	<param name="cPId">Client Partner ID</param>
	<param name="pName">Name</param>
	<param name="pCPF">CPF</param>
	<param name="pIdent">Identity</param>
	<param name="pPhone">Telephone</param>
	<param name="pCell">Cellular</param>
	<param name="pEmail">Email</param>
	<param name="pQuota">Quota</param>
	<param name="pZip">Postal Code</param>
	<param name="pStreet">Address</param>
	<param name="pUnit">Unit</param>
	<param name="pComplemen">Complement</param>
	<param name="pDist">District</param>
	<param name="pCity">City</param>
	<param name="pRegion">Region</param>
	<param name="pCountry">Country</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemovePartner(System.Int32,System.Int32)">
	<summary>
 Removes a client partner
 </summary>
	<param name="cPId">Client Partner ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPartnerBankRefs(System.Int32)">
	<summary>
 Gets client partner bank references by client id
 </summary>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientPartnerBankRef(System.Int32,System.Int32)">
	<summary>
 Gets client partner bank reference
 </summary>
	<param name="cPBRId">Client Partner Bank Ref ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientPartnerBankRef(RIW.Modules.Services.Models.ClientPartnerBankRef)">
	<summary>
 Updates client partner bank reference by partner bank reference id
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.RemovePartnerBankReference(System.Int32,System.Int32)">
	<summary>
 Removes a client's partner bank reference
 </summary>
	<param name="cPBRId">Client Partner Bank Reference Source ID</param>
	<param name="cId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientUserLogin(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Updates client login and or email by client user id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cId">Client ID</param>
	<param name="cUId">User ID</param>
	<param name="newUsername">New Username</param>
	<param name="subject">Subject</param>
	<param name="body">Message</param>
	<param name="mUId">Modified By User ID</param>
	<param name="md">Modified Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.GetClientHistory(System.Int32)">
	<summary>
 Gets client history by client id
 </summary>
	<param name="cId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.AddClientHistory(System.Int32,System.String,System.Int32,System.DateTime)">
	<summary>
 Adds client history
 </summary>
	<param name="cId">Client ID</param>
	<param name="hText">History Text</param>
	<param name="uId">User ID</param>
	<param name="cd">Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientStatus(RIW.Modules.Services.Models.Client)">
	<summary>
 Adds client history
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ClientsController.UpdateClientSent(System.Int32,System.Boolean,System.Int32,System.DateTime,System.String)">
	<summary>
 Adds client history
 </summary>
	<param name="cId">Client ID</param>
	<param name="sent">Status ID</param>
	<param name="hText">History Text</param>
	<param name="uId">User ID</param>
	<param name="cd">Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetCategories(System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
	<summary>
 Gets a list of brands by portal id
 </summary>
	<param name="portalId"></param>
	<param name="lang"></param>
	<param name="parentId"></param>
	<param name="filter"></param>
	<param name="archived"></param>
	<param name="includeArchived"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetCategory(System.Int32,System.String)">
	<summary>
 Gets category
 </summary>
	<param name="catId">Category ID</param>
	<param name="lang">Category Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetCategoryLang(System.Int32,System.String)">
	<summary>
 Gets category
 </summary>
	<param name="catId">Category ID</param>
	<param name="lang">Category Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetCategoryPermissions(System.Int32)">
	<summary>
 Gets a list of permissions by category id
 </summary>
	<param name="catId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetCategoriesRolePermissions(System.Int32)">
	<summary>
 Gets a list of permissions by category id
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.UpdateCategorySecurity(RIW.Modules.Services.Models.CategoryPermission)">
	<summary>
 Resets category security
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.UpdateCategory(RIW.Modules.Services.Models.Category)">
	<summary>
 Gets or updates category model
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.RemoveCategory(System.Int32,System.String)">
	<summary>
 Removes category
 </summary>
	<param name="catId">Kit ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.CategoriesController.GetProductsCategory(System.Int32)">
	<summary>
 Gets list of products
 </summary>
	<param name="categoryId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IndustriesController.GetIndustries(System.Int32)">
	<summary>
 Gets a list of industries by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IndustriesController.UpdateIndustry(System.Int32,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds ou updates an industry
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="industryId">Industry ID</param>
	<param name="industryTitle">Industry Title</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IndustriesController.RemoveIndustry(System.Int32,System.Int32)">
	<summary>
 Removes an industry
 </summary>
	<param name="industryId">Industry ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AccountsController.GetAccounts(System.Int32)">
	<summary>
 Gets a list of accounts by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AccountsController.UpdateAccount(System.Int32,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds ou updates an account
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="accId">Account ID</param>
	<param name="AccName">Brand Title</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AccountsController.RemoveAccount(System.Int32,System.Int32)">
	<summary>
 Removes an account
 </summary>
	<param name="accId">Account ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.getProduct(System.Int32,System.String)">
	<summary>
 Gets product info by product id
 </summary>
	<param name="productId">Product ID</param>
	<param name="lang">Product Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.getProductImages(System.Int32)">
	<summary>
 Gets product images by product id
 </summary>
	<param name="pId">Product ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProduct(RIW.Modules.Services.Models.Product)">
	<summary>
 Adds or updates a product
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProductModels(System.String)">
	<summary>
 Adds or updates products models
 </summary>
	<param name="ProductModels"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProductModel(System.Int32,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
	<summary>
 Add or updates product model
 </summary>
	<param name="productId"></param>
	<param name="modelName">Model Name</param>
	<param name="listOrder"></param>
	<param name="modelRef"></param>
	<param name="lang"></param>
	<param name="modelDesc"></param>
	<param name="barcode"></param>
	<param name="qtyRemaining"></param>
	<param name="qtyTrans"></param>
	<param name="qtyTransDate"></param>
	<param name="deleted"></param>
	<param name="qtyStockSet"></param>
	<param name="dealerCost"></param>
	<param name="purchaseCost"></param>
	<param name="extra"></param>
	<param name="dealerOnly"></param>
	<param name="modelId"></param>
	<param name="allow"></param>
	<param name="unitCost">Unit Cost</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProductOption(System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
	<summary>
 Adds or updates product option
 </summary>
	<param name="productId"></param>
	<param name="listOrder"></param>
	<param name="attributes"></param>
	<param name="optionId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProductOptionValue(System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
	<summary>
 Adds or updates product option value
 </summary>
	<param name="optionId"></param>
	<param name="lang"></param>
	<param name="listOrder"></param>
	<param name="addedCost"></param>
	<param name="optionValueId"></param>
	<param name="optionValueDesc"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ProductsController.updateProductRelated(RIW.Modules.Services.Models.ProductRelated)">
	<summary>
 Adds or updates product related
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ListsController.GetCountryList">
	<summary>
 Anonymous REST API that returns list of coutries in DNN
 </summary>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ListsController.GetRegionList(System.String)">
	<summary>
 GET: /Regions/{code}
 </summary>
	<param name="code"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.LogController.LogAnonymous(RIW.Modules.Services.Models.ServicesAction)">
	<summary>
 WebAPI deserializes json post into DnnServicesObjects.ServicesAction
 </summary>
	<param name="action">json object</param>
	<returns></returns>
</member><member name="M:RIW.Modules.Services.PayConditionsController.GetPayConds(System.Int32,System.String,System.Decimal)">
	<summary>
 Gets list of payment conditions by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="pcType">Payment Condition Type</param>
	<param name="pcStart">Payment Condition Start Value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayConditionsController.GetPayCond(System.Int32)">
	<summary>
 Gets payment condition by id
 </summary>
	<param name="pcId">Pay Condition ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayConditionsController.UpdatePayCond(RIW.Modules.Services.Models.PayCondition)">
	<summary>
 Adds payment condition
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayConditionsController.RemovePayCond(System.Int32)">
	<summary>
 Removes payment condition by id
 </summary>
	<param name="pcId">Payment Condition ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayFormsController.GetPayForms(System.Int32,System.String)">
	<summary>
 Gets list of payment forms by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayFormsController.GetPayForm(System.Int32)">
	<summary>
 Gets payment form by id
 </summary>
	<param name="pfId">Pay Form ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayFormsController.UpdatePayForm(System.Int32,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds payment form
 </summary>
	<param name="pfId">Payment Form ID</param>
	<param name="portalId">Portal ID</param>
	<param name="pfTitle">Payment Form Title</param>
	<param name="uId">Creator ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.PayFormsController.RemovePayForm(System.Int32)">
	<summary>
 Removes payment form by id
 </summary>
	<param name="pfId">Payment Form ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandsController.GetBrands(System.Int32,System.String)">
	<summary>
 Gets a list of brands by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="isDeleted">Optional IsDeleted</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandsController.GetBrand(System.Int32)">
	<summary>
 Gets list of models by brand id
 </summary>
	<param name="brandId">Brand ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandsController.UpdateBrand(System.Int32,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds a new brand
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="brandId">Brand ID</param>
	<param name="bTitle">Brand Title</param>
	<param name="uId">Created By User User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.BrandsController.RemoveBrand(System.Int32)">
	<summary>
 Removes brand
 </summary>
	<param name="brandId">Brand ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AgendaController.GetAgenda(System.String,System.String,System.DateTime,System.DateTime)">
	<summary>
 Gets user calendar events
 </summary>
	<param name="portalId"></param>
	<param name="uId"></param>
	<param name="startDate">Start Calendar Date</param>
	<param name="endDate">End Calendar Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AgendaController.UpdateAgenda(System.Int32,System.DateTime,System.String,System.String,System.String,System.Int32,System.DateTime,System.String,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
	<summary>
 Adds appointment data
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cId">Client ID</param>
	<param name="uId">User ID</param>
	<param name="startDate">Start Date Time</param>
	<param name="endDate">End Date Time</param>
	<param name="reminder">Reminder</param>
	<param name="desc">Description</param>
	<param name="subject">Subject</param>
	<param name="annot">Annotations</param>
	<param name="hText">History Text</param>
	<param name="cUId">Created By User ID</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.AgendaController.RemoveAppointment(System.Int32,System.Int32)">
	<summary>
 Removes appointment by appointment id
 </summary>
	<param name="appId">Appointment ID</param>
	<param name="userId">User ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.Login(System.Int32,System.String,System.String)">
	<summary>
 Logs user in
 Never Cache
 </summary>
	<param name="portalId"></param>
	<param name="userName"></param>
	<param name="password"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.HostSettings">
	<summary>
 Gets host settings
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetPublicRoles">
	<summary>
 Gets a list of public roles
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.UpdatePortalSetting(System.Int32,System.String,System.String)">
	<summary>
 Updates portal settings
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="settingName">Portal Setting Name</param>
	<param name="settingValue">Portal Setting Value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.UpdateModuleSetting(System.String)">
	<summary>
 Updates portal settings
 </summary>
	<param name="moduleSettings">Module Settings</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.UpdateTabModuleSetting(System.String)">
	<summary>
 Updates portal settings
 </summary>
	<param name="tabModuleSettings"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetPortalSettings(System.Int32)">
	<summary>
 Gets all current portal settings
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetUsers(System.Collections.Generic.IEnumerable{DotNetNuke.Entities.Users.UserInfo})">
	<summary>
 Gets list of users by portal id
 </summary>
	<param name="users"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetUsersByRoleName(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
	<summary>
 Gets list of users by portal id and role name
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="roleName">Role Name</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetUser(System.Int32,System.Int32)">
	<summary>
 Gets user info by portal id and user id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="uId">User ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.AddPortalFolder(System.Int32,System.String)">
	<summary>
 Adds folders by portal id
 </summary>
	<param name="portalId"></param>
	<param name="folder">Folder Name</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SaveFile(System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
	<summary>
 Saves File
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="maxWidth">Image's width</param>
	<param name="maxHeight">Image's height</param>
	<param name="folderPath">Save path</param>
	<param name="files">Uploaded Files</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SaveFileContent(System.Int32,System.String,System.String,System.String)">
	<summary>
 Saves File
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="content">File Content</param>
	<param name="fileName">File Name</param>
	<param name="folderPath">Folder Name</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.RemovePortalFile(System.Int32,System.String,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
	<summary>
 Removes File
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="fileName">File Name</param>
	<param name="fileId">File ID</param>
	<param name="folderPath">Folder Path</param>
	<param name="files">File to be deleted</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SendNewEstimateNotification(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Sends an email notification about a new estimate
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cid">Client ID</param>
	<param name="eId">Estimate ID</param>
	<param name="sId">Sales Person ID</param>
	<param name="subject">Email Subject</param>
	<param name="msg">Mensagem</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SendNewEstimateEmail(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Sends an email notification about a new estimate
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cid">Client ID</param>
	<param name="eId">Estimate ID</param>
	<param name="sId">Sales Person ID</param>
	<param name="subject">Email Subject</param>
	<param name="msg">Mensagem</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SendNewEmail(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Sends new email
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cUid">Client User ID</param>
	<param name="uId">User ID</param>
	<param name="hText">History</param>
	<param name="subject">Email Subject</param>
	<param name="body">Mensagem</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SendNews(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
	<summary>
 Sends new email
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="cId">Client ID</param>
	<param name="uId">User ID</param>
	<param name="subject">Email Subject</param>
	<param name="body">Mensagem</param>
	<param name="emails">Endereços de email</param>
	<param name="hText">History Text</param>
	<param name="cd">Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.ExtendTime">
	<summary>
 This is used from JavaScript to re-establish the user's session
 Needs to implement "Never Cache"
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.ExpireTime">
	<summary>
 Logs current user out
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.UpdateUserPassword(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Updates user password
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="uId">User ID</param>
	<param name="currPassword">Current Password</param>
	<param name="newPassword">New Password</param>
	<param name="subject">Subject</param>
	<param name="body">Message</param>
	<param name="mUId">Modified By User ID</param>
	<param name="md">Modified Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GenerateUserPassword(System.Int32,System.Int32,System.String,System.String,System.Int32,System.DateTime)">
	<summary>
 Generates new random user password by user id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="uId">User ID</param>
	<param name="subject">Subject</param>
	<param name="body">Message</param>
	<param name="mUId">Modified By User ID</param>
	<param name="md">Modified Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.SaveUserPhoto(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
	<summary>
 Saves user photo
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="uId">User ID</param>
	<param name="maxWidth">Image's width</param>
	<param name="maxHeight">Image's height</param>
	<param name="photos">Uploaded Files</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.RemoveUserPhoto(System.Int32,System.Int32,System.String)">
	<summary>
 Removes user photo
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="uId">User ID</param>
	<param name="fileName">File Name</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.RIStoreController.GetRoles(System.Int32)">
	<summary>
 Gets a list of roles by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetInvoices(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Get invoices by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="clientId">Client ID</param>
	<param name="providerId">Provider ID</param>
	<param name="prodId">Product ID</param>
	<param name="sDate">Emission Date Start</param>
	<param name="eDate">Emission Date End</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">How many pages</param>
	<param name="orderBy">Field to order by</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetInvoice(System.Int32)">
	<summary>
 Gets product info by product id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.UpdateInvoice(RIW.Modules.Services.Models.Invoice)">
	<summary>
 Updates an invoice
 </summary>
	<param name="dto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.RemoveInvoice(System.Int32)">
	<summary>
 Removes an invoice by invoice id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.UpdateInvoiceItem(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.DateTime,System.Int32)">
	<summary>
 Adds an invoice item by invoice item id
 </summary>
	<param name="iItemId">Invoice Detail ID</param>
	<param name="prodId">Product ID</param>
	<param name="qty">Quantity</param>
	<param name="discount">Discount</param>
	<param name="uValue">Unit Value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetInvoiceItems(System.Int32)">
	<summary>
 Gets a list if invoice items by invoice id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetPayments(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Gets a list of payments
 </summary>
	<param name="portalId">POrtal ID</param>
	<param name="account">Account ID</param>
	<param name="provider">Provider ID</param>
	<param name="client">Client ID</param>
	<param name="cat">Credit or Debit</param>
	<param name="sDate">Start Transaction Date</param>
	<param name="eDate">End Transaction Date</param>
	<param name="sTerm">Search Term</param>
	<param name="done">Done</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">Page Size</param>
	<param name="orderBy">Order By</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetPayment(System.Int32)">
	<summary>
 Gets a payment into
 </summary>
	<param name="pmtId">Payment ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.UpdatePayment(System.Int32,System.Boolean,System.Int32,System.String,System.String,System.String,System.Int32,System.DateTime,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Updates a payment
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="pmtId">Paymment ID</param>
	<param name="transId">Invoice Amount</param>
	<param name="docId">Document Id</param>
	<param name="transDate">Transaction Date</param>
	<param name="done">Done</param>
	<param name="accId">AccountId</param>
	<param name="providerId">Provider ID</param>
	<param name="clientId">Client ID</param>
	<param name="comment">Comment</param>
	<param name="dueDate">Due Date</param>
	<param name="credit">Credit</param>
	<param name="debit">Debit</param>
	<param name="uId">Modified By User</param>
	<param name="cd">Created Date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.InvoicesController.GetAccountsBalance(System.String,System.String)">
	<summary>
 Gets a total balance
 </summary>
	<param name="portalId">POrtal ID</param>
	<param name="account">Account ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:RIW.Modules.Services.Business_Controller">
	<summary>
 The Controller class for RIStore_Settings
 
 The FeatureController class is defined as the BusinessController in the manifest file (.dnn)
 DotNetNuke will poll this class to find out which Interfaces the class implements. 
 
 The IPortable interface is used to import/export content from a DNN module
 
 The ISearchable interface is used by DNN to index the content of a module
 
 The IUpgradeable interface allows module developers to execute code during the upgrade 
 process for a module.
 
 Below you will find stubbed out implementations of each, uncomment and populate with your own data
 </summary>
</member><member name="M:RIW.Modules.Services.Models.User.GetProfileProperty(System.String)">
	<summary>
 This method returns the value of the ProfileProperty if is defined, otherwise it returns an Empty string
 </summary>
	<param name="propertyName">property name</param>
	<returns>property value</returns>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.GetClientBankRefs(System.Int32)">
	<summary>
 Gets a list of client bank references by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.GetClientBankRef(System.Int32,System.Int32)">
	<summary>
 Gets a client bank reference by id
 </summary>
	<param name="clientBankRefId">ClientBankRef ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.AddClientBankRef(RIW.Modules.Services.Models.ClientBankRef)">
	<summary>
 Adds a client bank reference
 </summary>
	<param name="clientBankRef">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.UpdateClientBankRef(RIW.Modules.Services.Models.ClientBankRef)">
	<summary>
 Updates a client bank reference
 </summary>
	<param name="clientBankRef">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.RemoveClientBankRef(System.Int32,System.Int32)">
	<summary>
 Removes client bank reference by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientBankRefId">Client Address ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.RemoveClientBankRefs(System.Int32)">
	<summary>
 Remove all client bank reference
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientBankRefsRepository.RemoveClientBankRef(RIW.Modules.Services.Models.ClientBankRef)">
	<summary>
 Removes a client bank reference
 </summary>
	<param name="clientBankRef">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.GetPayConds(System.Int32,System.String,System.Decimal)">
	<summary>
 Gets list of payment conditions by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="payCondType">Payment Condition Type</param>
	<param name="payCondStart">Payment Condition Start Value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.GetPayCond(System.Int32,System.Int32)">
	<summary>
 Gets payment condition by id
 </summary>
	<param name="payConditionId">Pay Condition ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.AddPayCond(RIW.Modules.Services.Models.PayCondition)">
	<summary>
 Adds payment condition
 </summary>
	<param name="payCondition">PayCondition Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.UpdatePayCond(RIW.Modules.Services.Models.PayCondition)">
	<summary>
 Updates payment condition
 </summary>
	<param name="payCondition">PayCondition Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.RemovePayCond(System.Int32,System.Int32)">
	<summary>
 Sets payment condition as deleted
 </summary>
	<param name="payConditionId">Payment Condition ID</param>
	<param name="portalId">Portal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayConditionsRepository.RemovePayCond(RIW.Modules.Services.Models.PayCondition)">
	<summary>
 Removes payment condition by id
 </summary>
	<param name="payCondition">PayCondition Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.AddInvoice(RIW.Modules.Services.Models.Invoice)">
	<summary>
 Add an invoice
 </summary>
	<param name="invoice"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.GetInvoices(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String)">
	<summary>
 Get invoices by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="clientId">Client ID</param>
	<param name="providerId">Provider ID</param>
	<param name="prodId">Product ID</param>
	<param name="sDate">Emission Date Start</param>
	<param name="eDate">Emission Date End</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">How many pages</param>
	<param name="orderBy">Field to order by</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.GetInvoice(System.Int32)">
	<summary>
 Gets invoice
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.UpdateInvoice(RIW.Modules.Services.Models.Invoice)">
	<summary>
 Updates an invoice
 </summary>
	<param name="invoice">Invoice Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.RemoveInvoice(System.Int32)">
	<summary>
 Removes an invoice by invoice id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.RemoveInvoice(RIW.Modules.Services.Models.Invoice)">
	<summary>
 Removes an invoice
 </summary>
	<param name="invoice">Invoice Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.GetInvoiceItems(System.Int32)">
	<summary>
 Gets invoice items by invoice id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.GetInvoiceItem(System.Int32,System.Int32)">
	<summary>
 Gets product info by product id
 </summary>
	<param name="invoiceItemId">Invoice Item ID</param>
	<param name="invoiceId">Invoice ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.RemoveInvoiceItem(System.Int32,System.Int32)">
	<summary>
 Removes an invoice by invoice id
 </summary>
	<param name="invoiceItemId">Invoice Item ID</param>
	<param name="invoiceId">Invoice ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.RemoveInvoiceItem(RIW.Modules.Services.Models.InvoiceItem)">
	<summary>
 Removes an invoice
 </summary>
	<param name="invoiceItem">InvoiceItem Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.RemoveInvoiceItems(System.Int32)">
	<summary>
 Removes an invoice by invoice id
 </summary>
	<param name="invoiceId">Invoice ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.UpdateInvoiceItem(RIW.Modules.Services.Models.InvoiceItem)">
	<summary>
 Updates an invoice item
 </summary>
	<param name="invoiceItem">Invoice Item Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IInvoicesRepository.AddInvoiceItem(RIW.Modules.Services.Models.InvoiceItem)">
	<summary>
 Add an invoice item
 </summary>
	<param name="invoiceItem">Invoice Item Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.AddBrand(RIW.Modules.Services.Models.Brand)">
	<summary>
 Adds a new brand
 </summary>
	<param name="brand">Brand Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.GetBrands(System.Int32)">
	<summary>
 Gets a list of brands by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.GetBrand(System.Int32,System.Int32)">
	<summary>
 Gets list of models by brand id
 </summary>
	<param name="brandId">Brand ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.UpdateBrand(RIW.Modules.Services.Models.Brand)">
	<summary>
 Adds a new brand
 </summary>
	<param name="brand">Brand Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.RemoveBrand(System.Int32,System.Int32)">
	<summary>
 Removes brand
 </summary>
	<param name="brandId">Brand ID</param>
	<param name="portalId">Portal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandsRepository.RemoveBrand(RIW.Modules.Services.Models.Brand)">
	<summary>
 Removes brand
 </summary>
	<param name="brand">Brand Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IFiles_Repository.DeleteFile(System.String)">
	<summary>
 Deletes a file
 </summary>
	<param name="fileName">File Name</param>
	<remarks>all the items belong at the same Folder</remarks>
	<returns>The not deleted items list. The subfiles / subfolders for which the user has no permissions to delete</returns>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.GetClientHistories(System.Int32)">
	<summary>
 Gets a list of client Histories by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.GetClientHistory(System.Int32,System.Int32)">
	<summary>
 Gets a client doc by id
 </summary>
	<param name="clientHistoryId">ClientHistory ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.AddClientHistory(RIW.Modules.Services.Models.ClientHistory)">
	<summary>
 Adds a client doc
 </summary>
	<param name="clientHistory">Client History Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.UpdateClientHistory(RIW.Modules.Services.Models.ClientHistory)">
	<summary>
 Updates a client doc
 </summary>
	<param name="clientHistory">Client History Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.RemoveClientHistory(System.Int32,System.Int32)">
	<summary>
 Removes client doc by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientHistoryId">Client History ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.RemoveClientHistories(System.Int32)">
	<summary>
 Remove all client doc
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientHistoriesRepository.RemoveClientHistory(RIW.Modules.Services.Models.ClientHistory)">
	<summary>
 Removes a client doc
 </summary>
	<param name="clientHistory">Client History Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.GetClientPartnerBankRefs(System.Int32)">
	<summary>
 Gets a list of client partner's bank refs by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.GetClientPartnerBankRef(System.Int32,System.Int32)">
	<summary>
 Gets a client partner's bank ref by id
 </summary>
	<param name="clientPartnerBankRefId">Client Partner Bank Ref ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.AddClientPartnerBankRef(RIW.Modules.Services.Models.ClientPartnerBankRef)">
	<summary>
 Adds a client partner's bank ref
 </summary>
	<param name="clientPartnerBankRef">Client Partner Bank Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.UpdateClientPartnerBankRef(RIW.Modules.Services.Models.ClientPartnerBankRef)">
	<summary>
 Updates a client partner's bank ref
 </summary>
	<param name="clientPartnerBankRef">Client Partner Bank Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.RemoveClientPartnerBankRef(System.Int32,System.Int32)">
	<summary>
 Removes client partner's bank ref by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientPartnerBankRefId">Client Partner Bank Ref ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.RemoveClientPartnerBankRefs(System.Int32)">
	<summary>
 Remove all client partner's bank ref
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnerBankRefsRepository.RemoveClientPartnerBankRef(RIW.Modules.Services.Models.ClientPartnerBankRef)">
	<summary>
 Removes a client partner's bank ref
 </summary>
	<param name="clientPartnerBankRef">Client Partner Bank Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.GetEstimates(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
	<summary>
 Gets a list of estimates by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="clientId">Client ID</param>
	<param name="salesRep">Sales Rep. ID</param>
	<param name="SearchTerm">Search Term</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">Page Size</param>
	<param name="orderBy">Order By</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.GetEstimateItems(System.Int32)">
	<summary>
 Gets a list of estimate items by estimate id
 </summary>
	<param name="eId">Estimate ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.GetEstimate(System.Int32,System.Int32)">
	<summary>
 Gets an estimate by id
 </summary>
	<param name="estimateId">Estimate ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.AddEstimate(RIW.Modules.Services.Models.Estimate)">
	<summary>
 Adds an estimate
 </summary>
	<param name="estimate">Estimate Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.AddEstimateItem(RIW.Modules.Services.Models.EstimateItem)">
	<summary>
 Adds an estimate
 </summary>
	<param name="estimateItem">Estimate Item Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.UpdateEstimate(RIW.Modules.Services.Models.Estimate)">
	<summary>
 Updates an estimate
 </summary>
	<param name="estimate">Estimate Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.RemoveEstimate(System.Int32,System.Int32)">
	<summary>
 Removes estimate by estimate id and client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="estimateId">Estimate ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.RemoveEstimates(System.Int32,System.Int32)">
	<summary>
 Removes all client estimates
 </summary>
	<param name="clientId">Client ID</param>
	<param name="portalId">Portal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.RemoveEstimate(RIW.Modules.Services.Models.Estimate)">
	<summary>
 Removes an estimate
 </summary>
	<param name="Estimate">Estimate Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.AddEstimateItemRemoved(RIW.Modules.Services.Models.EstimateRemovedItem)">
	<summary>
 Adds an estimate
 </summary>
	<param name="estimateItem">Estimate Item Removed Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.GetEstimateItem(System.Int32,System.Int32)">
	<summary>
 Gets an estimate by id
 </summary>
	<param name="estimateItemId">Estimate Item ID</param>
	<param name="estimateId">Estimate ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.RemoveEstimateItem(System.Int32,System.Int32)">
	<summary>
 Removes estimate by estimate id and client id
 </summary>
	<param name="estimateItemId">Estimate Item ID</param>
	<param name="estimateId">Estimate ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.RemoveEstimateItem(RIW.Modules.Services.Models.EstimateItem)">
	<summary>
 Removes an estimate item
 </summary>
	<param name="estimateItem">Estimate Item Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IEstimatesRepository.AddEstimateHistory(RIW.Modules.Services.Models.EstimateHistory)">
	<summary>
 Adds an estimate hsitory
 </summary>
	<param name="estimateHistory">Estimate History Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.AddBrandModel(RIW.Modules.Services.Models.BrandModel)">
	<summary>
 Adds a new brandModel
 </summary>
	<param name="brandModel">BrandModel Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.GetBrandModel(System.Int32,System.Int32)">
	<summary>
 Gets a brandModel
 </summary>
	<param name="modelId">Model ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.GetBrandModels(System.Int32)">
	<summary>
 Gets list of brandModels bt brand id
 </summary>
	<param name="brandId">Brand ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.UpdateBrandModel(RIW.Modules.Services.Models.BrandModel)">
	<summary>
 Adds a new brandModel
 </summary>
	<param name="brandModel">BrandModel Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.RemoveBrandModel(System.Int32,System.Int32)">
	<summary>
 Removes brandModel
 </summary>
	<param name="brandModelId">BrandModel ID</param>
	<param name="portalId">Portal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IBrandModelsRepository.RemoveBrandModel(RIW.Modules.Services.Models.BrandModel)">
	<summary>
 Removes brandModel
 </summary>
	<param name="brandModel">BrandModel Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.GetClientIncomeSources(System.Int32)">
	<summary>
 Gets a list of client income sources by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.GetClientIncomeSource(System.Int32,System.Int32)">
	<summary>
 Gets a client income source by id
 </summary>
	<param name="clientIncomeSourceId">Client Income Source ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.AddClientIncomeSource(RIW.Modules.Services.Models.ClientIncomeSource)">
	<summary>
 Adds a client income source
 </summary>
	<param name="clientIncomeSource">Client Income Source Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.UpdateClientIncomeSource(RIW.Modules.Services.Models.ClientIncomeSource)">
	<summary>
 Updates a client income source
 </summary>
	<param name="clientIncomeSource">Client Income Source Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.RemoveClientIncomeSource(System.Int32,System.Int32)">
	<summary>
 Removes client income source by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientIncomeSourceId">Client Income Source ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.RemoveClientIncomeSources(System.Int32)">
	<summary>
 Remove all client income source
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIncomeSourcesRepository.RemoveClientIncomeSource(RIW.Modules.Services.Models.ClientIncomeSource)">
	<summary>
 Removes a client income source
 </summary>
	<param name="clientIncomeSource">Client Income Source Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIndustriesRepository.GetClientIndustries(System.Int32)">
	<summary>
 Gets a list of industries by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIndustriesRepository.AddClientIndustry(RIW.Modules.Services.Models.ClientIndustry)">
	<summary>
 Adds a new client industry
 </summary>
	<param name="t">Client Industry Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIndustriesRepository.RemoveClientIndustries(System.Int32)">
	<summary>
 Removes client industries by client id
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientIndustriesRepository.RemoveClientIndustry(RIW.Modules.Services.Models.ClientIndustry)">
	<summary>
 Removes a client industry
 </summary>
	<param name="t">Client Industry Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICashiersRepository.AddCashier(RIW.Modules.Services.Models.Cashier)">
	<summary>
 Adds a quick sales
 </summary>
	<param name="sale">Cashier Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.GetClientContacts(System.Int32)">
	<summary>
 Gets a list of client contacts by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.GetClientContact(System.Int32,System.Int32)">
	<summary>
 Gets a client contact by id
 </summary>
	<param name="clientContactId">ClientContact ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.AddClientContact(RIW.Modules.Services.Models.ClientContact)">
	<summary>
 Adds a client contact
 </summary>
	<param name="clientContact">Client Contact Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.UpdateClientContact(RIW.Modules.Services.Models.ClientContact)">
	<summary>
 Updates a client contact
 </summary>
	<param name="clientContact">Client Contact Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.RemoveClientContact(System.Int32,System.Int32)">
	<summary>
 Removes client contact by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientContactId">Client Contact ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.RemoveClientContacts(System.Int32)">
	<summary>
 Remove all client contact
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientContactsRepository.RemoveClientContact(RIW.Modules.Services.Models.ClientContact)">
	<summary>
 Removes a client contact
 </summary>
	<param name="clientContact">Client Contact Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.GetClients(System.String,System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String)">
	<summary>
 Gets list of clients
 </summary>
	<param name="PortalId">Portal ID</param>
	<param name="SalesRep">Sales Rep</param>
	<param name="IsDeleted">Is Deleted</param>
	<param name="SearchString">Search Term</param>
	<param name="StatusId">Status ID</param>
	<param name="StartDate">Modified Date start Range</param>
	<param name="EndDate">Modified Date end Range</param>
	<param name="PageNumber">Page Number</param>
	<param name="PageSize">Page Size</param>
	<param name="OrderBy">Order BY</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.GetClient(System.Int32,System.Int32)">
	<summary>
 Gets client info by client id
 </summary>
	<param name="cId">Client ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.AddClient(RIW.Modules.Services.Models.Client)">
	<summary>
 Adds client
 </summary>
	<param name="client">Client Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.UpdateClient(RIW.Modules.Services.Models.Client)">
	<summary>
 Updates a client
 </summary>
	<param name="client">Client Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.RemoveClient(System.Int32,System.Int32,System.Int32)">
	<summary>
 Deletes a client
 </summary>
	<param name="clientId">Client ID</param>
	<param name="cUserId">Client's User ID</param>
	<param name="portalId">POrtal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientsRepository.RemoveClient(RIW.Modules.Services.Models.Client)">
	<summary>
 Deletes a client
 </summary>
	<param name="client">Client Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductsCategory(System.Int32)">
	<summary>
 Gets products from product category
 </summary>
	<param name="categoryId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProduct(RIW.Modules.Services.Models.Product)">
	<summary>
 Adds product
 </summary>
	<param name="product">Product Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProduct(RIW.Modules.Services.Models.Product)">
	<summary>
 Updates product
 </summary>
	<param name="product">Product Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductLang(RIW.Modules.Services.Models.ProductLang)">
	<summary>
 Adds product
 </summary>
	<param name="productLang">Product Language Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductLang(RIW.Modules.Services.Models.ProductLang)">
	<summary>
 Updates product
 </summary>
	<param name="ProductLang">Product Language Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProducts(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean)">
	<summary>
 Gets list of products
 </summary>
	<param name="portalId"></param>
	<param name="categoryId"></param>
	<param name="lang"></param>
	<param name="filter"></param>
	<param name="getDeleted"></param>
	<param name="featuredOnly"></param>
	<param name="orderBy"></param>
	<param name="orderDesc"></param>
	<param name="returnLimit"></param>
	<param name="pageIndex"></param>
	<param name="pageSize"></param>
	<param name="searchDesc"></param>
	<param name="isDealer"></param>
	<param name="categoryList"></param>
	<param name="excludeFeatured"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProduct(System.Int32,System.String)">
	<summary>
 Gets product
 </summary>
	<param name="productId">Product ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductLang(System.Int32,System.String)">
	<summary>
 Gets product Language
 </summary>
	<param name="productId">Product ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductModel(System.Int32,System.String)">
	<summary>
 Gets product model
 </summary>
	<param name="productId">Product ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductModels(System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Gets list product models
 </summary>
	<param name="portalId"></param>
	<param name="productId"></param>
	<param name="lang"></param>
	<param name="isDealer"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getImages(System.Int32)">
	<summary>
 Gets product images by product id
 </summary>
	<param name="productId">Product ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductModel(RIW.Modules.Services.Models.ProductModel)">
	<summary>
 Updates product model
 </summary>
	<param name="productModel">Product Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductModelLang(RIW.Modules.Services.Models.ProductModelLang)">
	<summary>
 Updates product model language
 </summary>
	<param name="productModelLang">Product Model Language</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductModel(RIW.Modules.Services.Models.ProductModel)">
	<summary>
 Adds product model
 </summary>
	<param name="productModel"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductModelLang(RIW.Modules.Services.Models.ProductModelLang)">
	<summary>
 Adds product model language
 </summary>
	<param name="productModelLang"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductCategories(System.Int32,System.String)">
	<summary>
 Adds product to categories
 </summary>
	<param name="product"></param>
	<param name="productCats"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductCategory(System.Int32,System.Int32)">
	<summary>
 Add product to category
 </summary>
	<param name="productId"></param>
	<param name="categoryId"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductCategories(System.Int32)">
	<summary>
 Get list of product categories
 </summary>
	<param name="productId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.copyProductToLanguages(RIW.Modules.Services.Models.ProductLang,System.Boolean)">
	<summary>
 Copy product languages
 </summary>
	<param name="productLang"></param>
	<param name="ForceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.copyProductToLanguages(RIW.Modules.Services.Models.ProductLang,System.String,System.String,System.Boolean)">
	<summary>
 Copy product languages
 </summary>
	<param name="productLang"></param>
	<param name="lang"></param>
	<param name="originalLang"></param>
	<param name="forceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.copyModelToLanguages(RIW.Modules.Services.Models.ProductModelLang,System.Boolean)">
	<summary>
 Copies product model languages
 </summary>
	<param name="productModelLang"></param>
	<param name="forceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.copyModelToLanguages(RIW.Modules.Services.Models.ProductModelLang,System.String,System.Boolean)">
	<summary>
 Copies product model languages
 </summary>
	<param name="productModelLang"></param>
	<param name="lang"></param>
	<param name="forceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductOption(RIW.Modules.Services.Models.ProductOption)">
	<summary>
 Updates product option
 </summary>
	<param name="productOption">Product Option</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductOptionLang(RIW.Modules.Services.Models.ProductOptionLang)">
	<summary>
 Updates product option language
 </summary>
	<param name="productOptionLang">Product Option Language</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductOption(RIW.Modules.Services.Models.ProductOption)">
	<summary>
 Adds product option
 </summary>
	<param name="productOption"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductOptionLang(RIW.Modules.Services.Models.ProductOptionLang)">
	<summary>
 Adds product option language
 </summary>
	<param name="productOptionLang"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductOption(System.Int32,System.String)">
	<summary>
 Gets product option
 </summary>
	<param name="optionId">Option ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductOptions(System.Int32,System.String)">
	<summary>
 Gets list product options
 </summary>
	<param name="productId"></param>
	<param name="lang"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.CopyOptionToLanguages(RIW.Modules.Services.Models.ProductOptionLang,System.String,System.Boolean)">
	<summary>
 Copies option model languages
 </summary>
	<param name="objInfo"></param>
	<param name="Lang"></param>
	<param name="ForceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductOptionValue(RIW.Modules.Services.Models.ProductOptionValue)">
	<summary>
 Updates product option value
 </summary>
	<param name="productOptionValue">Product Option</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductOptionValueLang(RIW.Modules.Services.Models.ProductOptionValueLang)">
	<summary>
 Updates product option value language
 </summary>
	<param name="productOptionValueLang">Product Option Value Language</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductOptionValue(RIW.Modules.Services.Models.ProductOptionValue)">
	<summary>
 Adds product option value
 </summary>
	<param name="productOptionValue"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductOptionValueLang(RIW.Modules.Services.Models.ProductOptionValueLang)">
	<summary>
 Adds product option value language
 </summary>
	<param name="productOptionValueLang"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductOptionValue(System.Int32,System.String)">
	<summary>
 Gets product option value
 </summary>
	<param name="optionValueId">Option Value ID</param>
	<param name="lang">Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductOptionValues(System.Int32,System.String)">
	<summary>
 Gets list product option values
 </summary>
	<param name="optionId"></param>
	<param name="lang"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.CopyOptionValueToLanguages(RIW.Modules.Services.Models.ProductOptionValueLang,System.String,System.Boolean)">
	<summary>
 Copies option value model languages
 </summary>
	<param name="objInfo"></param>
	<param name="Lang"></param>
	<param name="ForceOverwrite"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.updateProductRelated(RIW.Modules.Services.Models.ProductRelated)">
	<summary>
 Updates product related
 </summary>
	<param name="productRelated">Product Related</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.addProductRelated(RIW.Modules.Services.Models.ProductRelated)">
	<summary>
 Adds product related
 </summary>
	<param name="related"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductRelated(System.Int32)">
	<summary>
 Gets product related
 </summary>
	<param name="productRelatedId">Option Related ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.getProductsRelated(System.Int32)">
	<summary>
 Gets products related
 </summary>
	<param name="productId">Product ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.removeProductCategory(System.Int32)">
	<summary>
 Remove product category
 </summary>
	<param name="productId"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.removeProductsCategory(System.Int32)">
	<summary>
 Remove product category
 </summary>
	<param name="categoryId"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IProductsRepository.removeProductCategory(RIW.Modules.Services.Models.ProductCategory)">
	<summary>
 Removes product category
 </summary>
	<param name="productCategory"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.GetAccounts(System.Int32)">
	<summary>
 Gets a list of creditor account by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.GetAccount(System.Int32,System.Int32)">
	<summary>
 Gets a creditor account by id
 </summary>
	<param name="accountId">Account ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.UpdateAccount(RIW.Modules.Services.Models.Account)">
	<summary>
 Updates a creditor account info
 </summary>
	<param name="t">Account Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.AddAccount(RIW.Modules.Services.Models.Account)">
	<summary>
 Adds a new creditor account
 </summary>
	<param name="t">Account Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.RemoveAccount(System.Int32,System.Int32)">
	<summary>
 Removes a creditor account by id
 </summary>
	<param name="accountId">Account ID</param>
	<param name="portalId">POrtal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.RemoveAccount(RIW.Modules.Services.Models.Account)">
	<summary>
 Removes a creditor account
 </summary>
	<param name="t">Account Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAccountsRepository.GetAccountsBalance(System.String,System.String)">
	<summary>
 Gets a total balance
 </summary>
	<param name="portalId">POrtal ID</param>
	<param name="account">Account ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.GetClientDocs(System.Int32)">
	<summary>
 Gets a list of client docs by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.GetClientDoc(System.Int32,System.Int32)">
	<summary>
 Gets a client doc by id
 </summary>
	<param name="clientDocId">Client Doc ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.AddClientDoc(RIW.Modules.Services.Models.ClientDoc)">
	<summary>
 Adds a client doc
 </summary>
	<param name="clientDoc">Client Doc Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.UpdateClientDoc(RIW.Modules.Services.Models.ClientDoc)">
	<summary>
 Updates a client doc
 </summary>
	<param name="clientDoc">Client Doc Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.RemoveClientDoc(System.Int32,System.Int32)">
	<summary>
 Removes client doc by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientDocId">Client Doc ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.RemoveClientDocs(System.Int32)">
	<summary>
 Remove all client doc
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientDocsRepository.RemoveClientDoc(RIW.Modules.Services.Models.ClientDoc)">
	<summary>
 Removes a client doc
 </summary>
	<param name="clientDoc">Client Doc Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.GetClientCommRefs(System.Int32)">
	<summary>
 Gets a list of client commerce references by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.GetClientCommRef(System.Int32,System.Int32)">
	<summary>
 Gets a client commerce reference by id
 </summary>
	<param name="clientCommRefId">ClientCommRef ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.AddClientCommRef(RIW.Modules.Services.Models.ClientCommRef)">
	<summary>
 Adds a client commerce reference
 </summary>
	<param name="clientCommRef">Client Commerce Reference Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.UpdateClientCommRef(RIW.Modules.Services.Models.ClientCommRef)">
	<summary>
 Updates a client commerce reference
 </summary>
	<param name="clientCommRef">Client Commerce Reference Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.RemoveClientCommRef(System.Int32,System.Int32)">
	<summary>
 Removes client commerce reference by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientCommRefId">Client Commerce Reference ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.RemoveClientCommRefs(System.Int32)">
	<summary>
 Remove all client commerce reference
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientCommRefsRepository.RemoveClientCommRef(RIW.Modules.Services.Models.ClientCommRef)">
	<summary>
 Removes a client commerce reference
 </summary>
	<param name="clientCommRef">Client Commerce Reference Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPaymentsRepository.GetPayments(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String)">
	<summary>
 Gets a list of payments
 </summary>
	<param name="portalId">POrtal ID</param>
	<param name="account">Account ID</param>
	<param name="provider">Provider ID</param>
	<param name="client">Client ID</param>
	<param name="cat">Credit or Debit</param>
	<param name="sDate">Start Transaction Date</param>
	<param name="eDate">End Transaction Date</param>
	<param name="sTerm">Search Term</param>
	<param name="done">Done</param>
	<param name="pageNumber">Page Number</param>
	<param name="pageSize">Page Size</param>
	<param name="orderBy">Order By</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.AddPayForm(RIW.Modules.Services.Models.PayForm)">
	<summary>
 Add pay form
 </summary>
	<param name="payForm"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.RemovePayForm(System.Int32,System.Int32)">
	<summary>
 Removes pay form by id
 </summary>
	<param name="payFormId"></param>
	<param name="portalId"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.RemovePayForm(RIW.Modules.Services.Models.PayForm)">
	<summary>
 Removes pay form
 </summary>
	<param name="payForm"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.GetPayForms(System.Int32)">
	<summary>
 Gets list of pay forms
 </summary>
	<param name="portalId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.GetPayForm(System.Int32,System.Int32)">
	<summary>
 Gets pay form
 </summary>
	<param name="payFormId"></param>
	<param name="portalId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IPayFormsRepository.UpdatePayForm(RIW.Modules.Services.Models.PayForm)">
	<summary>
 Updates pay form
 </summary>
	<param name="payForm"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategories_List(System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
	<summary>
 Gets a list of categories by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<param name="lang">Language</param>
	<param name="parentId">Parent ID</param>
	<param name="filter">Filter</param>
	<param name="archived">Maked As Deleted</param>
	<param name="includeArchived">Include Deleted</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategory(System.Int32,System.String)">
	<summary>
 Gets category
 </summary>
	<param name="catId">Category ID</param>
	<param name="lang">Category Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategoryLang(System.Int32,System.String)">
	<summary>
 Gets category Language
 </summary>
	<param name="catId">Category ID</param>
	<param name="lang">Category Language</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategoryPermissions(System.Int32)">
	<summary>
 Gets a list of category permissions by category id
 </summary>
	<param name="categoryId">Category ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategoryProducts(System.Int32)">
	<summary>
 Gets list of products
 </summary>
	<param name="categoryId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategoryPermission(System.Int32,System.Int32)">
	<summary>
 Gets category permission
 </summary>
	<param name="categoryPermissionId"></param>
	<param name="categoryId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.GetCategoriesRolePermissions(System.Int32)">
	<summary>
 Gets a list of permissions by category id
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.AddCategory(RIW.Modules.Services.Models.Category)">
	<summary>
 Adds or updates a category
 </summary>
	<param name="category">Category Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.AddCategoryLang(RIW.Modules.Services.Models.CategoryLang)">
	<summary>
 Adds or updates a category
 </summary>
	<param name="categoryLang">Category Language Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.UpdateCategory(RIW.Modules.Services.Models.Category)">
	<summary>
 Adds or updates a category
 </summary>
	<param name="category">Category Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.UpdateCategoryLang(RIW.Modules.Services.Models.CategoryLang)">
	<summary>
 Adds or updates a category
 </summary>
	<param name="categoryLang">Category Language Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.AddCategorySecurity(RIW.Modules.Services.Models.CategoryPermission)">
	<summary>
 Updates a category security
 </summary>
	<param name="catPermission">Category Permission Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.UpdateCategoryPermission(RIW.Modules.Services.Models.CategoryPermission)">
	<summary>
 Updates category permission
 </summary>
	<param name="catPermission"></param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.RemoveCategorySecurities(RIW.Modules.Services.Models.CategoryPermission)">
	<summary>
 Resets category securities
 </summary>
	<param name="catPermission">Category Permission Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.ResetCategorySecurities(System.Int32)">
	<summary>
 Resets category securities
 </summary>
	<param name="catId">Category ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.RemoveCategory(RIW.Modules.Services.Models.Category)">
	<summary>
 Removes category
 </summary>
	<param name="category">Category Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.RemoveCategory(System.Int32,System.String)">
	<summary>
 Removes category
 </summary>
	<param name="catId">Category ID</param>
	<param name="lang">Language</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.ICategoriesRepository.DeleteCategory(RIW.Modules.Services.Models.Category)">
	<summary>
 Deletes category
 </summary>
	<param name="category">Category Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.GetClientPersonalRefs(System.Int32)">
	<summary>
 Gets a list of client personal refs by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.GetClientPersonalRef(System.Int32,System.Int32)">
	<summary>
 Gets a client personal ref by id
 </summary>
	<param name="clientPersonalRefId">Client Personal Ref ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.AddClientPersonalRef(RIW.Modules.Services.Models.ClientPersonalRef)">
	<summary>
 Adds a client personal ref
 </summary>
	<param name="clientPersonalRef">Client Personal Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.UpdateClientPersonalRef(RIW.Modules.Services.Models.ClientPersonalRef)">
	<summary>
 Updates a client personal ref
 </summary>
	<param name="clientPersonalRef">Client Personal Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.RemoveClientPersonalRef(System.Int32,System.Int32)">
	<summary>
 Removes client personal ref by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientPersonalRefId">Client Personal Ref ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.RemoveClientPersonalRefs(System.Int32)">
	<summary>
 Remove all client personal ref
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPersonalRefsRepository.RemoveClientPersonalRef(RIW.Modules.Services.Models.ClientPersonalRef)">
	<summary>
 Removes a client personal ref
 </summary>
	<param name="clientPersonalRef">Client Personal Ref Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.GetIndustries(System.Int32)">
	<summary>
 Gets a list of industries by portal id
 </summary>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.GetIndustry(System.Int32,System.Int32)">
	<summary>
 Gets a creditor account by id
 </summary>
	<param name="accountId">Account ID</param>
	<param name="portalId">Portal ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.UpdateIndustry(RIW.Modules.Services.Models.Industry)">
	<summary>
 Updates an industry info
 </summary>
	<param name="industry">Industry Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.AddIndustry(RIW.Modules.Services.Models.Industry)">
	<summary>
 Adds a new industry
 </summary>
	<param name="industry">Industry Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.RemoveIndustry(System.Int32,System.Int32)">
	<summary>
 Removes an industry by id
 </summary>
	<param name="industryId">Industry ID</param>
	<param name="portalId">Portal ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IIndustriesRepository.RemoveIndustry(RIW.Modules.Services.Models.Industry)">
	<summary>
 Removes an industry
 </summary>
	<param name="industry">Industry Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.GetAgendaData(System.String,System.String,System.DateTime,System.DateTime)">
	<summary>
 Gets user agenda's data
 </summary>
	<param name="PortalId">Portal ID</param>
	<param name="UserId">User ID</param>
	<param name="StartDateTime">Agenda range starting date</param>
	<param name="EndDateTime">Agenda range ending date</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.GetAppointmentData(System.Int32,System.Int32)">
	<summary>
 Gets user appoitment's data
 </summary>
	<param name="AppointmentId">Appointment ID</param>
	<param name="UserId">User ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.GetAppointmentsDataRes">
	<summary>
 To be implemented
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.AddAppointmentData(RIW.Modules.Services.Models.Agenda)">
	<summary>
 Adds appointment data
 </summary>
	<param name="appointment">Agenda Model</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.UpdateAppointmentData(RIW.Modules.Services.Models.Agenda)">
	<summary>
 Updates appointment data
 </summary>
	<param name="appointment">Agenda Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.RemoveAppointment(System.Int32,System.Int32)">
	<summary>
 Removes appointment by appointment id
 </summary>
	<param name="appointmentId">AppointmentId ID</param>
	<param name="userId">User ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.RemoveAppointments(System.Int32)">
	<summary>
 Remove all appointments by user id
 </summary>
	<param name="userId">User ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IAgendasRepository.RemoveAppointment(RIW.Modules.Services.Models.Agenda)">
	<summary>
 Removes appointment
 </summary>
	<param name="appointment">Agenda Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.GetClientAddresses(System.Int32)">
	<summary>
 Gets a list of client addresses by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.GetClientAddress(System.Int32,System.Int32)">
	<summary>
 Gets a client address by id
 </summary>
	<param name="ClientAddressId">ClientAddress ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.AddClientAddress(RIW.Modules.Services.Models.ClientAddress)">
	<summary>
 Adds a client address
 </summary>
	<param name="clientAddress">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.UpdateClientAddress(RIW.Modules.Services.Models.ClientAddress)">
	<summary>
 Updates a client address
 </summary>
	<param name="clientAddress">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.RemoveClientAddress(System.Int32,System.Int32)">
	<summary>
 Removes client address by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientAddressId">Client Address ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.RemoveClientAddresses(System.Int32)">
	<summary>
 Remove all client addresses
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientAddressesRepository.RemoveClientAddress(RIW.Modules.Services.Models.ClientAddress)">
	<summary>
 Removes a client address
 </summary>
	<param name="clientAddress">Client Address Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.GetClientPartners(System.Int32)">
	<summary>
 Gets a list of client partners by client id
 </summary>
	<param name="clientId">Client ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.GetClientPartner(System.Int32,System.Int32)">
	<summary>
 Gets a client partner by id
 </summary>
	<param name="clientPartnerId">Client Partner ID</param>
	<param name="clientId">Clientl ID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.AddClientPartner(RIW.Modules.Services.Models.ClientPartner)">
	<summary>
 Adds a client partner
 </summary>
	<param name="clientPartner">Client Partner Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.UpdateClientPartner(RIW.Modules.Services.Models.ClientPartner)">
	<summary>
 Updates a client partner
 </summary>
	<param name="clientPartner">Client Partner Model</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.RemoveClientPartner(System.Int32,System.Int32)">
	<summary>
 Removes client partner by client id
 </summary>
	<param name="clientId">Client ID</param>
	<param name="clientPartnerId">Client Partner ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.RemoveClientPartners(System.Int32)">
	<summary>
 Remove all client partner
 </summary>
	<param name="clientId">Client ID</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.IClientPartnersRepository.RemoveClientPartner(RIW.Modules.Services.Models.ClientPartner)">
	<summary>
 Removes a client partner
 </summary>
	<param name="clientPartner">Client Partner Model</param>
	<remarks></remarks>
</member><member name="T:RIW.Modules.Services.DataProvider">
 -----------------------------------------------------------------------------
 <summary>
 An abstract class for the data access layer
 </summary>
	<remarks>
	</remarks>
	<history>
	</history>
 -----------------------------------------------------------------------------

</member><member name="P:RIW.Modules.Services.SendEmail.Priority">
	<summary>
 Priority of emails to be sent
 </summary>
</member><member name="P:RIW.Modules.Services.SendEmail.Subject">
	<summary>
 Subject of the emails to be sent
 </summary>
	<remarks>may contain tokens</remarks>
</member><member name="P:RIW.Modules.Services.SendEmail.Body">
	<summary>
 body text of the email to be sent
 </summary>
	<remarks>may contain HTML tags and tokens. Side effect: sets BodyFormat autmatically</remarks>
</member><member name="P:RIW.Modules.Services.SendEmail.BodyFormat">
	<summary>format of body text for the email to be sent.</summary>
	<remarks>by default activated, if tokens are found in Body and subject.</remarks>
</member><member name="P:RIW.Modules.Services.SendEmail.PortalAlias">
	<summary>portal alias http path to be used for links to images, ...</summary>
</member><member name="P:RIW.Modules.Services.SendEmail.SendingUser">
	<summary>UserInfo of the user sending the mail</summary>
	<remarks>if not set explicitely, currentuser will be used</remarks>
</member><member name="P:RIW.Modules.Services.SendEmail.ReplyTo">
	<summary>email of the user to be shown in the mail as replyTo address</summary>
	<remarks>if not set explicitely, sendingUser will be used</remarks>
</member><member name="P:RIW.Modules.Services.SendEmail.RemoveDuplicates">
	<summary>shall duplicate email addresses be ignored? (default value: false)</summary>
	<remarks>Duplicate Users (e.g. from multiple role selections) will always be ignored.</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.ConditionallyAddUser(DotNetNuke.Entities.Users.UserInfo,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{DotNetNuke.Entities.Users.UserInfo}@)">
	<summary>add a user to the userlist, if it is not already in there</summary>
	<param name="user">user to add</param>
	<param name="keyList">list of key (either email addresses or userid's)</param>
	<param name="userList">List of users</param>
	<remarks>for use by Recipients method only</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.MatchLanguageFilter(System.String)">
	<summary>check, if the user's language matches the current language filter</summary>
	<param name="userLanguage">Language of the user</param>
	<returns>userlanguage matches current languageFilter</returns>
	<remarks>if filter not set, true is returned</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.SetSMTPServer(System.String,System.Int32,System.String,System.String,System.String,System.Boolean)">
	<summary>Specify SMTP server to be used</summary>
	<param name="smtpServer">name of the SMTP server</param>
	<param name="smtpAuthentication">authentication string (0: anonymous, 1: basic, 2: NTLM)</param>
	<param name="smtpUsername">username to log in SMTP server</param>
	<param name="smtpPassword">password to log in SMTP server</param>
	<param name="smtpEnableSSL">SSL used to connect tp SMTP server</param>
	<returns>always true</returns>
	<remarks>if not called, values will be taken from host settings</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.AddAttachment(System.String)">
	<summary>Add a single attachment file to the email</summary>
	<param name="localPath">path to file to attach</param>
	<remarks>only local stored files can be added with a path</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.AddAddressedUser(DotNetNuke.Entities.Users.UserInfo)">
	<summary>Add a single recipient</summary>
	<param name="recipient">userinfo of user to add</param>
	<remarks>emaiol will be used for addressing, other properties might be used for TokenReplace</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.AddAddressedRole(System.String)">
	<summary>Add all members of a role to recipient list</summary>
	<param name="roleName">name of a role, whose members shall be added to recipients</param>
	<remarks>emaiol will be used for addressing, other properties might be used for TokenReplace</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.Recipients">
	<summary>All bulk mail recipients, derived from role names and individual adressees </summary>
	<returns>List of userInfo objects, who receive the bulk mail </returns>
	<remarks>user.Email used for sending, other properties might be used for TokenReplace</remarks>
</member><member name="M:RIW.Modules.Services.SendEmail.Send">
	<summary>Wrapper for Function SendMails</summary>
</member><member name="M:RIW.Modules.Services.Notifications.SendStoreEmail(DotNetNuke.Entities.Users.UserInfo,DotNetNuke.Entities.Users.UserInfo,DotNetNuke.Entities.Users.UserInfo,DotNetNuke.Entities.Users.UserInfo,System.String,System.String,System.IO.Stream,System.String,System.Int32,DotNetNuke.Services.Mail.MailFormat,DotNetNuke.Services.Mail.MailPriority,DotNetNuke.Entities.Users.UserInfo,System.Int32,System.Boolean)">
	<summary>
 Sends an email
 </summary>
	<param name="fromUser">From</param>
	<param name="toUser">To</param>
	<param name="cctoUser">Carbon Copy</param>
	<param name="bccToUser">Blind Carbon Copy</param>
	<param name="_subject">Subject</param>
	<param name="_body">Body</param>
	<param name="_fileAttach">File Attachment</param>
	<param name="_fileType">File Type</param>
	<param name="_fileIdAttach">File Attachment ID</param>
	<param name="_bodyType">Body Type (html or plain text)</param>
	<param name="_priority">Email Priority</param>
	<param name="sendUser">Sender</param>
	<param name="_portalId">Portal ID</param>
	<param name="useStoreSMTP">USe store SMTP settings</param>
	<remarks></remarks>
</member><member name="M:RIW.Modules.Services.Notifications.AddNotificationTypes">
	<summary>
 This will create a notification type associated w/ the module and also handle the actions that must be associated with it.
 </summary>
	<remarks>This should only ever run once, during 5.0.0 install (via IUpgradeable)</remarks>
</member>
</members>
</doc>